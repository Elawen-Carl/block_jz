<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.charity.mapper.ProjectCommentMapper">
    
    <resultMap type="ProjectComment" id="ProjectCommentResult">
        <result property="commentId"    column="comment_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="content"    column="content"    />
        <result property="rating"    column="rating"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectProjectCommentVo">
        select pc.comment_id, pc.project_id,p.project_name, pc.user_id, u.nick_name as user_name, pc.content, pc.rating, pc.create_time 
        from project_comment pc
        left join sys_user u on pc.user_id = u.user_id
        left join charity_project p on pc.project_id = p.project_id
    </sql>

    <select id="selectProjectCommentList" parameterType="ProjectComment" resultMap="ProjectCommentResult">
        <include refid="selectProjectCommentVo"/>
        <where>  
            <if test="projectName != null "> and p.project_name = #{projectName}</if>
            <if test="projectId != null "> and p.project_id = #{projectId}</if>
            <if test="userName != null "> and u.nick_name = #{userName}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        </where>
    </select>
    
    <select id="selectProjectCommentByCommentId" parameterType="Long" resultMap="ProjectCommentResult">
        <include refid="selectProjectCommentVo"/>
        where pc.comment_id = #{commentId}
    </select>

    <insert id="insertProjectComment" parameterType="ProjectComment" useGeneratedKeys="true" keyProperty="commentId">
        insert into project_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="rating != null">rating,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="rating != null">#{rating},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateProjectComment" parameterType="ProjectComment">
        update project_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="rating != null">rating = #{rating},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteProjectCommentByCommentId" parameterType="Long">
        delete from project_comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteProjectCommentByCommentIds" parameterType="String">
        delete from project_comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>
</mapper>